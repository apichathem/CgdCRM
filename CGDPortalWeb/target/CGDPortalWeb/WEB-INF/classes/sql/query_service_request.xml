<?xml version="1.0" encoding="UTF-8"?>
<query-collection>
<sql-service name="SR.SQL_SEARCH_SR_BY_CRITERIA" type="named-parameter" showSql="true">
		<description>For Display Service Request Search List</description>
		<query><![CDATA[	
			
				SELECT	
					 SR.SR_NUMBER AS  srNumber
					,CAT1.CAT_NAME  AS  srTypeProblem1
	        		,CAT2.CAT_NAME  AS  srTypeProblem2
	        		,CAT3.CAT_NAME  AS  srTypeProblem3
	        		,CAT4.CAT_NAME  AS  srTypeProblem4
	        		,CAT5.CAT_NAME  AS  srTypeProblem5
					,CB3.CODE_NAME  AS  srStatusDesc
					,sla.SLA_NAME  AS  srPriorityDesc
					,SR.OPENED_DT  AS  srOpenedDate
					,SR.DUE_DT  AS  srDueDate
					,SR.CLOSED_DT  AS  srCloseDate
					, ISNULL(EMP1.FIRST_NAME, '')+' '+ISNULL(EMP1.LAST_NAME,'') AS  srOwnerName
				 	
					,SR.SR_TYPE_PROBLEM1 AS  srTypeProblem1Cd
					,SR.SR_TYPE_PROBLEM2 AS  srTypeProblem2Cd
					,SR.SR_TYPE_PROBLEM3 AS  srTypeProblem3Cd
					,SR.SR_TYPE_PROBLEM4 AS  srTypeProblem4Cd
					,SR.SR_TYPE_PROBLEM5 AS  srTypeProblem5Cd
				 	,SR.TITLE  AS srSubject
				 	
					,SR.PRIORITY_CD AS  srpriorityCd
					,SR.STATUS_CD  AS  srStatusCd
					,SR.OWNER_ID  AS  srOwnerId				
					,SR.CUST_ID  AS  srCustId
					,SR.CHANNEL_CD  AS  srChannelCd
					,CB5.CODE_NAME  AS  srChannelName
					,CASE SR.CUST_TYPE_CD 										
						WHEN 'I' THEN ISNULL(CUST_IND.FIRST_NAME, '')+' '+ISNULL(CUST_IND.LAST_NAME,'') 									
						ELSE CUST_CORP.COMPANY_NAME									
					  END AS  customerName
					,SR.REG_ID  AS  regId
					,SR.REG_DT  AS  regDt
					,ISNULL(EMP2.FIRST_NAME, '')+' '+ISNULL(EMP2.LAST_NAME,'') AS regName										
					,ISNULL(EMP3.FIRST_NAME, '')+' '+ISNULL(EMP3.LAST_NAME,'') AS chgName		
					  
				FROM TP_SR SR 										
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT1 CAT1 ON SR.SR_TYPE_PROBLEM1 = CAT1.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT2 CAT2 ON SR.SR_TYPE_PROBLEM2 = CAT2.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT3 CAT3 ON SR.SR_TYPE_PROBLEM3 = CAT3.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT4 CAT4 ON SR.SR_TYPE_PROBLEM4 = CAT4.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT5 CAT5 ON SR.SR_TYPE_PROBLEM5 = CAT5.CONTENT_CAT_ID									
				LEFT OUTER JOIN   TP_SLA sla ON SR.PRIORITY_CD = sla.SLA_ID AND sla.STATUS_CD='01'
				
				LEFT  OUTER JOIN TP_CODEBOOK_LANG CB3 ON SR.STATUS_CD = CB3.CODE_ID AND CB3.CODE_TYPE = 'SRQ_STATUS'	AND CB3.LANG_CD = :langCd									
				LEFT  OUTER JOIN TP_CODEBOOK_LANG CB4 ON SR.PRIORITY_CD = CB4.CODE_ID AND CB4.CODE_TYPE = 'SRQ_PRIORITY'	AND CB4.LANG_CD = :langCd									
				LEFT  OUTER JOIN TP_CODEBOOK_LANG CB5 ON SR.PRIORITY_CD = CB5.CODE_ID AND CB5.CODE_TYPE = 'SRQ_CHANNEL'	AND CB5.LANG_CD = :langCd
				
				LEFT  OUTER JOIN TP_USR_MASTER USR1 ON SR.OWNER_ID = USR1.USER_ID										
				LEFT  OUTER JOIN TP_EMPLOYEE EMP1 ON USR1.EMP_ID = EMP1.EMP_ID										
				LEFT  OUTER JOIN TP_USR_MASTER USR2 ON SR.REG_ID = USR2.USER_ID										
				LEFT  OUTER JOIN TP_EMPLOYEE EMP2 ON USR2.EMP_ID = EMP2.EMP_ID										
				LEFT  OUTER JOIN TP_USR_MASTER USR3 ON SR.CHG_ID = USR3.USER_ID										
				LEFT  OUTER JOIN TP_EMPLOYEE EMP3 ON USR3.EMP_ID = EMP3.EMP_ID										
				LEFT  OUTER JOIN TP_CUST_MASTER CUST ON SR.CUST_ID = CUST.CUST_ID  										
				LEFT  OUTER JOIN TP_INDIVIDUAL CUST_IND ON CUST.IND_ID = CUST_IND.IND_ID 										
				LEFT  OUTER JOIN TP_CORPORATION CUST_CORP ON CUST.CORP_ID = CUST_CORP.CORP_ID										
									
												
				WHERE	1=1										
				AND	SR.SR_GROUP =  'SR'	
				
				${#sr_number?.text}
				${#owner_id?.text}      
				
				${#srTypeProblem1?.text}
				${#srTypeProblem2?.text}
				${#srTypeProblem3?.text}
				${#srTypeProblem4?.text}
				${#srTypeProblem5?.text}
				
				${#status_cd?.text}
				${#channel_cd?.text}
				${#priority_cd?.text}
				
				${#reg_dt_start?.text}
				${#reg_dt_end?.text}
				${#cust_id?.text}
				
				${#due_dt_start?.text}
				${#due_dt_end?.text}
				
				${#ownerGroup?.text}
 
				ORDER BY SR.REG_DT DESC
				 
		
		]]>
		</query>

		<parameter name="sr_number">AND SR.SR_NUMBER = :sr_number</parameter>
		<parameter name="owner_id">AND SR.OWNER_ID = :owner_id</parameter>
		<parameter name="srTypeProblem1">AND SR.SR_TYPE_PROBLEM1 = :srTypeProblem1</parameter>
		<parameter name="srTypeProblem2">AND SR.SR_TYPE_PROBLEM2 = :srTypeProblem2</parameter>
		<parameter name="srTypeProblem3">AND SR.SR_TYPE_PROBLEM3 = :srTypeProblem3</parameter>
		<parameter name="srTypeProblem4">AND SR.SR_TYPE_PROBLEM4 = :srTypeProblem4</parameter>
		<parameter name="srTypeProblem5">AND SR.SR_TYPE_PROBLEM5 = :srTypeProblem5</parameter>
		<parameter name="status_cd">AND SR.STATUS_CD = :status_cd</parameter>
		<parameter name="channel_cd">AND SR.CHANNEL_CD = :channel_cd</parameter>
		<parameter name="priority_cd">AND SR.PRIORITY_CD = :priority_cd</parameter>
		<parameter name="reg_dt_start">AND SR.REG_DT &lt;= :reg_dt_end</parameter>
		<parameter name="reg_dt_end">AND SR.REG_DT >= :reg_dt_start</parameter>
		<parameter name="cust_id">AND SR.CUST_ID = :cust_id</parameter>
		<parameter name="due_dt_start">AND SR.DUE_DT &lt;= :due_dt_end</parameter>
		<parameter name="due_dt_end">AND SR.DUE_DT >= :due_dt_start</parameter>
		<parameter name='langCd' required="false" />
		<parameter name="ownerGroup">AND SR.OWNER_ID IN (:ownerGroup) </parameter>

	</sql-service>
	
	<sql-service name="SR.SQL_INSERT_SERVICE_REQUEST" type="named-parameter" showSql="true">
		<query><![CDATA[
		 	
		 	 	DECLARE @SR_NUMBER_OUT int
		 	
				EXEC DBO.[INSERT_SR_PROC]
						 :srNumber
				        ,:srCustId
				        ,:srContactId
				        ,:srCustType
				        ,:srStatusCd
				        ,:srpriorityCd
				        ,:srChannelCd 
				        ,:srOwnerId
				        ,'SR'
				        ,:srCloseDate
				        ,:srOpenedDate
				        ,:srDueDate
				        ,:srSubject
				        ,:srDescription
				        ,:regId
				        ,:regDt
				        ,:srConsultingNumber
				        ,:srTypeProblem1Cd
				        ,:srTypeProblem2Cd
				        ,:srTypeProblem3Cd
				        ,:srTypeProblem4Cd
				        ,:srTypeProblem5Cd
				        ,@SR_NUMBER_OUT OUTPUT
				        
		]]>
		</query>

		<parameter name="srNumber" required="false" />
		<parameter name="srSubject" required="false" />
		<parameter name="srTypeProblem1Cd" required="false" />
		<parameter name="srTypeProblem2Cd" required="false" />
		<parameter name="srTypeProblem3Cd" required="false" />
		<parameter name="srTypeProblem4Cd" required="false" />
		<parameter name="srTypeProblem5Cd" required="false" />
		<parameter name="srpriorityCd" required="false" />
		<parameter name="srChannelCd" required="false" />
		<parameter name="srStatusCd" required="false" />
		<parameter name="srCustId" required="false" />
		<parameter name="srCustType" required="false" />
		<parameter name="srDescription" required="false" />
		<parameter name="srOwnerId" required="false" />
		<parameter name="srOpenedDate" required="false" />
		<parameter name="srDueDate" required="false" />
		<parameter name="srCloseDate" required="false" />
		<parameter name="regId" required="false" />
		<parameter name="regDt" required="false" />
		<parameter name="srConsultingNumber" required="false" />
		


	</sql-service>
	
	<sql-service name="SR.SQL_SEARCH_DETAIL_SR_BY_SR_NUMBER" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>
		<query><![CDATA[	
				SELECT
				
					SR.SR_NUMBER AS  srNumber
			      	,SR.TITLE    AS srSubject  
			      	  
					,CAT1.CAT_NAME  AS  srTypeProblem1
	        		,CAT2.CAT_NAME  AS  srTypeProblem2
	        		,CAT3.CAT_NAME  AS  srTypeProblem3
	        		,CAT4.CAT_NAME  AS  srTypeProblem4
	        		,CAT5.CAT_NAME  AS  srTypeProblem5
			     	
			      	,CB4.CODE_NAME  AS  srPriorityDesc
			      	,CB5.CODE_NAME  AS  srChannelName          
					,CB3.CODE_NAME  AS  srStatusDesc
			      	,CASE SR.CUST_TYPE_CD 										
						WHEN 'I' THEN ISNULL(CUST_IND.FIRST_NAME, '')+' '+ISNULL(CUST_IND.LAST_NAME,'') 									
						ELSE CUST_CORP.COMPANY_NAME									
		    		END AS  customerName
			      	,SR.[DESCRIPTION] AS srDescription
			      	,SR.[NOTE_DESC] AS srNoteDescription
			      	
			      	,ISNULL(EMP1.FIRST_NAME, '')+' '+ISNULL(EMP1.LAST_NAME,'') AS  srOwnerName
			      	,SR.OPENED_DT AS srOpenedDate               
					,SR.DUE_DT  AS  srDueDate
					,SR.CLOSED_DT  AS  srCloseDate
			      	,SR.CONSULTING_NUMBER AS srConsultingNumber
			      	,SR.SR_TYPE_PROBLEM1 AS  srTypeProblem1Cd
					,SR.SR_TYPE_PROBLEM2 AS  srTypeProblem2Cd
					,SR.SR_TYPE_PROBLEM3 AS  srTypeProblem3Cd
					,SR.SR_TYPE_PROBLEM4 AS  srTypeProblem4Cd
					,SR.SR_TYPE_PROBLEM5 AS  srTypeProblem5Cd
					
					,SR.PRIORITY_CD AS  srpriorityCd
					,SR.STATUS_CD  AS  srStatusCd					
					,SR.OWNER_ID  AS  srOwnerId				
					,SR.CUST_ID  AS  srCustId
					,SR.CONT_ID AS srContactId
					,SR.CUST_TYPE_CD  AS  srCustType
					,SR.CHANNEL_CD  AS  srChannelCd
					,SR.REG_ID  AS  regId
					,SR.REG_DT  AS  regDt
					,SR.CHG_ID  AS  chgId
					
					
					,ISNULL(EMP2.FIRST_NAME, '')+' '+ISNULL(EMP2.LAST_NAME,'') AS createByName
				    ,CONVERT(VARCHAR, SR.REG_DT, 103) + '  ' + CONVERT(VARCHAR, SR.REG_DT, 108) AS createDateTime
					,ISNULL(EMP3.FIRST_NAME, '')+' '+ISNULL(EMP3.LAST_NAME,'') AS updateByName	
					,CONVERT(VARCHAR, SR.CHG_DT, 103) + '  ' + CONVERT(VARCHAR, SR.CHG_DT, 108) AS updateDateTime
				   
					  
				FROM TP_SR SR 										
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT1 CAT1 ON SR.SR_TYPE_PROBLEM1 = CAT1.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT2 CAT2 ON SR.SR_TYPE_PROBLEM2 = CAT2.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT3 CAT3 ON SR.SR_TYPE_PROBLEM3 = CAT3.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT4 CAT4 ON SR.SR_TYPE_PROBLEM4 = CAT4.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT5 CAT5 ON SR.SR_TYPE_PROBLEM5 = CAT5.CONTENT_CAT_ID
				
				LEFT  OUTER JOIN TP_CODEBOOK_LANG CB3 ON SR.STATUS_CD = CB3.CODE_ID AND CB3.CODE_TYPE = 'SRQ_STATUS'	AND CB3.LANG_CD = :langCd										
				LEFT  OUTER JOIN TP_CODEBOOK_LANG CB4 ON SR.PRIORITY_CD = CB4.CODE_ID AND CB4.CODE_TYPE = 'SRQ_PRIORITY'	AND CB4.LANG_CD = :langCd											
				LEFT  OUTER JOIN TP_CODEBOOK_LANG CB5 ON SR.CHANNEL_CD = CB5.CODE_ID AND CB5.CODE_TYPE = 'SRQ_CHANNEL'	AND CB5.LANG_CD = :langCd			
				
				LEFT  OUTER JOIN TP_ASSET AST ON SR.ASSET_ID = AST.ASSET_ID 	
        		LEFT  OUTER JOIN TP_USR_MASTER USR1 ON SR.OWNER_ID = USR1.USER_ID										
				LEFT  OUTER JOIN TP_EMPLOYEE EMP1 ON USR1.EMP_ID = EMP1.EMP_ID										
				LEFT  OUTER JOIN TP_USR_MASTER USR2 ON SR.REG_ID = USR2.USER_ID										
				LEFT  OUTER JOIN TP_EMPLOYEE EMP2 ON USR2.EMP_ID = EMP2.EMP_ID										
				LEFT  OUTER JOIN TP_USR_MASTER USR3 ON SR.CHG_ID = USR3.USER_ID										
				LEFT  OUTER JOIN TP_EMPLOYEE EMP3 ON USR3.EMP_ID = EMP3.EMP_ID										
				LEFT  OUTER JOIN TP_CUST_MASTER CUST ON SR.CUST_ID = CUST.CUST_ID  										
				LEFT  OUTER JOIN TP_INDIVIDUAL CUST_IND ON CUST.IND_ID = CUST_IND.IND_ID 										
				LEFT  OUTER JOIN TP_CORPORATION CUST_CORP ON CUST.CORP_ID = CUST_CORP.CORP_ID										
				LEFT  OUTER JOIN TP_CONTACT CON ON SR.CONT_ID = CON.CONT_ID										
				LEFT  OUTER JOIN TP_INDIVIDUAL IND ON CON.IND_ID = IND.IND_ID										
				WHERE	1=1													
				AND	SR.SR_GROUP =  'SR'	
				${#sr_number?.text} 	
		]]>
		</query>
		<parameter name="sr_number">AND SR.SR_NUMBER = :sr_number</parameter>
		<parameter name='langCd' required="false" />
	</sql-service>
	
	<sql-service name="SR.SQL_UPDATE_NOTE_DESC_SR_BY_SR_NUMBER" type="named-parameter" showSql="true">
		<query><![CDATA[
			 
				UPDATE TP_SR SET
				 NOTE_DESC = :srNoteDescription
				WHERE SR_NUMBER = :srNumber
						
			 
		]]>
		</query>

		<parameter name="srNumber" required="false" />
		<parameter name="srNoteDescription" required="false" />

	</sql-service>
	
	<sql-service name="SR.SQL_UPDATE_DETAIL_SR_BY_SR_NUMBER" type="named-parameter" showSql="true">
		<query><![CDATA[
			 
				UPDATE TP_SR SET
				
						TITLE = :srSubject
						,SR_TYPE_PROBLEM1 = :srTypeProblem1Cd
						,SR_TYPE_PROBLEM2 = :srTypeProblem2Cd
						,SR_TYPE_PROBLEM3 = :srTypeProblem3Cd
						,SR_TYPE_PROBLEM4 = :srTypeProblem4Cd
						,SR_TYPE_PROBLEM5 = :srTypeProblem5Cd
						,PRIORITY_CD = :srpriorityCd
						,CHANNEL_CD = :srChannelCd 
						,STATUS_CD = :srStatusCd
						,CUST_ID =  :srCustId
						,CUST_TYPE_CD = :srCustType
						,[DESCRIPTION]= :srDescription
						,OWNER_ID = :srOwnerId
						,CLOSED_DT = :srCloseDate
						,CHG_ID = :chgId
						,CHG_DT = :chgDt
				 
				WHERE SR_NUMBER = :srNumber
						
			 
		]]>
		</query>

		<parameter name="srNumber" required="false" />
		<parameter name="srSubject" required="false" />
		<parameter name="srTypeProblem1Cd" required="false" />
		<parameter name="srTypeProblem2Cd" required="false" />
		<parameter name="srTypeProblem3Cd" required="false" />
		<parameter name="srTypeProblem4Cd" required="false" />
		<parameter name="srTypeProblem5Cd" required="false" />
		<parameter name="srpriorityCd" required="false" />
		<parameter name="srChannelCd" required="false" />
		<parameter name="srStatusCd" required="false" />
		<parameter name="srCustId" required="false" />
		<parameter name="srCustType" required="false" />
		<parameter name="srDescription" required="false" />
		<parameter name="srOwnerId" required="false" />
		<parameter name="srCloseDate" required="false" />
		<parameter name="chgId" required="false" />
		<parameter name="chgDt" required="false" />

	</sql-service>
	
	<sql-service name="SR.SQL_INSERT_SERVICE_REQUEST_CONTENT" type="named-parameter" showSql="true">
		<query><![CDATA[
		
		 	INSERT INTO [TP_SR_CONTENT]
		           ([SR_NUMBER]
		           ,[CONTENT_ID]
		           ,[REG_ID]
		           ,[REG_DT]
			
			)VALUES(
		            :srNumber
		           ,:srContentId
		           ,:regId
		           ,:regDt
		         )
				        
		]]>
		</query>

		<parameter name="srNumber" required="false" />
		<parameter name="srContentId" required="false" />
		<parameter name="regId" required="false" />
		<parameter name="regDt" required="false" />

	</sql-service>
	
	<sql-service name="SR.SQL_SEARCH_SOLUTION_KNOWLEDGE_BASE" type="named-parameter" showSql="true">
		<description>For Display Service Request Search List By Content</description>
		<query><![CDATA[	
			
			SELECT			
			 C.CONTENT_ID AS contentId
			,C.CONTENT_NUMBER AS contentNumber
			,C.CONTENT_CAT_1_ID AS contentCat1Id
			,C.CONTENT_CAT_2_ID AS contentCat2Id
			,C.CONTENT_CAT_3_ID AS contentCat3Id
			,C.CONTENT_CAT_4_ID AS contentCat4Id
			,C.CONTENT_CAT_5_ID AS contentCat5Id

			,CAT1.CAT_NAME    AS contentCat1Name
			,CAT2.CAT_NAME    AS contentCat2Name
			,CAT3.CAT_NAME    AS contentCat3Name
			,CAT4.CAT_NAME    AS contentCat4Name
			,CAT5.CAT_NAME    AS contentCat5Name 

			,C.REF_ID AS refId
			,C.TYPE   AS contentType
			,C.TITLE  AS contentTitle
			,C.QUESTION AS contentQuestion
			,C.SUMMARY  As contentSummary
			,C.STATUS_CD As contentStatusCd
			,CB1.CODE_NAME AS contentStatusName
			
			,C.REG_ID    As contentRegId
			,C.REG_DT    As contentRedDt
			,C.CHG_ID	As contentChgId
			,C.CHG_DT   As contentChgDt

			,ISNULL(EMP1.FIRST_NAME, '')+' '+ISNULL(EMP1.LAST_NAME,'') AS regName										
			,ISNULL(EMP2.FIRST_NAME, '')+' '+ISNULL(EMP2.LAST_NAME,'') AS chgName	
			  
		FROM TP_KB_CONTENT C 
	
		LEFT  OUTER JOIN  TP_KB_CONTENT_CAT1 CAT1 ON C.CONTENT_CAT_1_ID = CAT1.CONTENT_CAT_ID
		LEFT  OUTER JOIN  TP_KB_CONTENT_CAT2 CAT2 ON C.CONTENT_CAT_2_ID = CAT2.CONTENT_CAT_ID
		LEFT  OUTER JOIN  TP_KB_CONTENT_CAT3 CAT3 ON C.CONTENT_CAT_3_ID = CAT3.CONTENT_CAT_ID
		LEFT  OUTER JOIN  TP_KB_CONTENT_CAT4 CAT4 ON C.CONTENT_CAT_4_ID = CAT4.CONTENT_CAT_ID
		LEFT  OUTER JOIN  TP_KB_CONTENT_CAT5 CAT5 ON C.CONTENT_CAT_5_ID = CAT5.CONTENT_CAT_ID			
		LEFT  OUTER JOIN TP_CODEBOOK_LANG CB1 ON C.STATUS_CD = CB1.CODE_ID AND CB1.CODE_TYPE = 'KB_CONTENT_STATUS'	AND CB1.LANG_CD = :langCd
											 									
		LEFT  OUTER JOIN TP_USR_MASTER USR1 ON C.REG_ID = USR1.USER_ID										
		LEFT  OUTER JOIN TP_EMPLOYEE EMP1 ON USR1.EMP_ID = EMP1.EMP_ID										
		LEFT  OUTER JOIN TP_USR_MASTER USR2 ON C.CHG_ID = USR2.USER_ID										
		LEFT  OUTER JOIN TP_EMPLOYEE EMP2 ON USR2.EMP_ID = EMP2.EMP_ID	
		WHERE  1=1
		${#contentNumber?.text}
		
		ORDER BY C.REG_DT DESC
			
		]]>
		</query>
		<parameter name="contentNumber">AND C.CONTENT_NUMBER = :contentNumber</parameter>
		<parameter name='langCd' required="false" />
	</sql-service>
	
	
	<sql-service name="SR.SQL_SEARCH_SOLUTION_KNOWLEDGE_BASE_DETAIL" type="named-parameter" showSql="true">
		<description>For Display Service Request Search List By Content</description>
		<query><![CDATA[	
			
			SELECT TOP 1		
			 C.CONTENT_ID AS contentId
			,C.CONTENT_NUMBER AS contentNumber
			,C.CONTENT_CAT_1_ID AS contentCat1Id
			,C.CONTENT_CAT_2_ID AS contentCat2Id
			,C.CONTENT_CAT_3_ID AS contentCat3Id
			,C.CONTENT_CAT_4_ID AS contentCat4Id
			,C.CONTENT_CAT_5_ID AS contentCat5Id

			,CAT1.CAT_NAME    AS contentCat1Name
			,CAT2.CAT_NAME    AS contentCat2Name
			,CAT3.CAT_NAME    AS contentCat3Name
			,CAT4.CAT_NAME    AS contentCat4Name
			,CAT5.CAT_NAME    AS contentCat5Name 
			
			,C.REF_ID AS refId
			,C.TYPE   AS contentType
			,C.TITLE  AS contentTitle
			,C.QUESTION AS contentQuestion
			,C.SUMMARY  As contentSummary
			,C.STATUS_CD As contentStatusCd
			,CB1.CODE_NAME AS contentStatusName
			
			,C.REG_ID    As contentRegId
			,C.REG_DT    As contentRedDt
			,C.CHG_ID	As contentChgId
			,C.CHG_DT   As contentChgDt

			,ISNULL(EMP1.FIRST_NAME, '')+' '+ISNULL(EMP1.LAST_NAME,'') AS regName										
			,ISNULL(EMP2.FIRST_NAME, '')+' '+ISNULL(EMP2.LAST_NAME,'') AS chgName	
			  
		FROM TP_KB_CONTENT C 
	
		LEFT  OUTER JOIN  TP_KB_CONTENT_CAT1 CAT1 ON C.CONTENT_CAT_1_ID = CAT1.CONTENT_CAT_ID
		LEFT  OUTER JOIN  TP_KB_CONTENT_CAT2 CAT2 ON C.CONTENT_CAT_2_ID = CAT2.CONTENT_CAT_ID
		LEFT  OUTER JOIN  TP_KB_CONTENT_CAT3 CAT3 ON C.CONTENT_CAT_3_ID = CAT3.CONTENT_CAT_ID
		LEFT  OUTER JOIN  TP_KB_CONTENT_CAT4 CAT4 ON C.CONTENT_CAT_4_ID = CAT4.CONTENT_CAT_ID
		LEFT  OUTER JOIN  TP_KB_CONTENT_CAT5 CAT5 ON C.CONTENT_CAT_5_ID = CAT5.CONTENT_CAT_ID			
		LEFT  OUTER JOIN TP_CODEBOOK_LANG CB1 ON C.STATUS_CD = CB1.CODE_ID AND CB1.CODE_TYPE = 'KB_CONTENT_STATUS'	AND CB1.LANG_CD = :langCd
											 									
		LEFT  OUTER JOIN TP_USR_MASTER USR1 ON C.REG_ID = USR1.USER_ID										
		LEFT  OUTER JOIN TP_EMPLOYEE EMP1 ON USR1.EMP_ID = EMP1.EMP_ID										
		LEFT  OUTER JOIN TP_USR_MASTER USR2 ON C.CHG_ID = USR2.USER_ID										
		LEFT  OUTER JOIN TP_EMPLOYEE EMP2 ON USR2.EMP_ID = EMP2.EMP_ID	
		WHERE  1=1
		${#contentNumber?.text}
		
		ORDER BY C.REG_DT DESC
			
		]]>
		</query>
		<parameter name="contentNumber">AND C.CONTENT_NUMBER = :contentNumber</parameter>
		<parameter name='langCd' required="false" />
	</sql-service>
	
	<sql-service name="SR.SQL_SEARCH_CONTENT_BY_SERVICE_REQUEST_NUMBER" type="named-parameter" showSql="true">
		<description>For Display Service Request Search List By Content</description>
		<query><![CDATA[	
			
			SELECT 
				 SC.CONTENT_ID AS srContentId
				,C.CONTENT_CAT_1_ID AS  contentCat1Id
				,SC.SR_NUMBER  AS srNumber
				,C.CONTENT_NUMBER  AS srContentNumber
				,CAT1.CAT_NAME AS contentCat1Name
				,C.TITLE  AS contentTitle
				
				,ISNULL(EMP1.FIRST_NAME, '')+' '+ISNULL(EMP1.LAST_NAME,'') AS createByName										
				,ISNULL(EMP2.FIRST_NAME, '')+' '+ISNULL(EMP2.LAST_NAME,'') AS updateByName	
				,C.TYPE AS contentFaqKbType
				,SC.REG_ID    As regId
				,SC.REG_DT    As regDt
				,SC.CHG_ID	As chgId
				,SC.CHG_DT   As chgDt
			
			FROM  TP_SR_CONTENT SC
			LEFT OUTER JOIN TP_KB_CONTENT C ON SC.CONTENT_ID = C.CONTENT_ID	
			LEFT  OUTER JOIN  TP_KB_CONTENT_CAT1 CAT1 ON C.CONTENT_CAT_1_ID = CAT1.CONTENT_CAT_ID
			LEFT  OUTER JOIN TP_USR_MASTER USR1 ON SC.REG_ID = USR1.USER_ID										
			LEFT  OUTER JOIN TP_EMPLOYEE EMP1 ON USR1.EMP_ID = EMP1.EMP_ID										
			LEFT  OUTER JOIN TP_USR_MASTER USR2 ON SC.CHG_ID = USR2.USER_ID										
			LEFT  OUTER JOIN TP_EMPLOYEE EMP2 ON USR2.EMP_ID = EMP2.EMP_ID	
			WHERE 1=1
			
			${#srNumber?.text}
			
			ORDER BY SC.REG_DT DESC
			
		]]>
		</query>
		<parameter name="srNumber">AND SC.SR_NUMBER = :srNumber</parameter>
	</sql-service>
	
	<sql-service name="SR.SQL_DELETE_SERVICE_REQ_CONTENT_BY_KEY" type="named-parameter" showSql="true">
		<description> Delete TP_REL_ID  </description>	
		<query><![CDATA[
		
			DELETE FROM TP_SR_CONTENT
			WHERE SR_NUMBER = :srNumber
			AND CONTENT_ID = :srContentId
	
		]]>
		</query>
		<parameter name="srNumber" required="true">:srNumber</parameter>
		<parameter name="srContentId" required="true">:srContentId</parameter>
		
	</sql-service>
	
	<sql-service name="SR.SQL_SEARCH_ACTIVITY_LIST_SR_BY_SR_NUMBER" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>
		<query><![CDATA[	
		
			SELECT			
				ACT.ACT_NUMBER	AS	actNumber	
				,ACT.REF_DOC_NO	AS	refDocNo	
				,ACT.ATTEND_TO	AS	attendTo	
				,ACT.TITLE	AS	title	
				,ACT.TYPE_CD	AS	typeCd	
				,ACT.SUB_TYPE_CD	AS	subTypeCd	
				,ACT.DESCRIPTION	AS	description	
				,ACT.PHONE_NO	AS	phoneNo	
				,ACT.SMS_NO	AS	smsNo	
				,ACT.FAX_NO	AS	faxNo	
				,ACT.EMAIL	AS	email	
				,ACT.ADDRESS	AS	address	
				,ACT.STATUS_CD	AS	statusCd	
				,ACT.OWNER_ID	AS	ownerId	
				,ACT.OWNER_DEPT_CODE	AS	ownerDeptCode	
				,ACT.OPENED_DT	AS	openedDt	
				,ACT.DUE_DT	AS	dueDt	
				,ACT.OPER_DT	AS	operDt	
				,ACT.CLOSED_DT	AS	closedDt	
				,ACT.REG_ID	AS	regId	
				,ACT.REG_DT	AS	regDt	
				,ACT.CHG_ID	AS	chgId	
				,ACT.CHG_DT	AS	chgDt	
				,CB1.CODE_NAME		AS	activityTypeName 	
				,CB2.CODE_NAME 		AS	activityStatusName	
				,ISNULL(EMP1.FIRST_NAME,'')+' '+ISNULL(EMP1.LAST_NAME,'')	AS	ownerName	
				,DEP.DEPT_NAME		AS	deptName	
				,ISNULL(EMP2.FIRST_NAME, '')+' '+ISNULL(EMP2.LAST_NAME,'') AS	regName	
				,ISNULL(EMP3.FIRST_NAME, '')+' '+ISNULL(EMP3.LAST_NAME,'') 	AS	chgName	
				,CONVERT(VARCHAR, ACT.REG_DT, 103) + '  ' + CONVERT(VARCHAR, ACT.REG_DT, 108) AS	regDatetime	
				,CONVERT(VARCHAR, ACT.CHG_DT, 103) + '  ' + CONVERT(VARCHAR, ACT.CHG_DT, 108) AS	chgDatetime	
			FROM	TP_ACTIVITY ACT											
			LEFT	OUTER JOIN TP_CODEBOOK_LANG CB1 ON ACT.TYPE_CD = CB1.CODE_ID AND CB1.CODE_TYPE = 'ACT_TYPE'	AND CB1.LANG_CD = :langCd												
			LEFT	OUTER JOIN TP_CODEBOOK_LANG CB2 ON ACT.STATUS_CD = CB2.CODE_ID AND CB2.CODE_TYPE = 'ACT_STATUS'	AND CB2.LANG_CD = :langCd																						
			LEFT	OUTER JOIN TP_USR_MASTER USR1 ON ACT.OWNER_ID = USR1.USER_ID											
			LEFT	OUTER JOIN TP_EMPLOYEE EMP1 ON USR1.EMP_ID = EMP1.EMP_ID											
			LEFT	OUTER JOIN TP_DEPARTMENT DEP ON ACT.OWNER_DEPT_CODE = DEP.DEPT_CODE											
			LEFT	OUTER JOIN TP_USR_MASTER USR2 ON ACT.REG_ID = USR2.USER_ID											
			LEFT	OUTER JOIN TP_EMPLOYEE EMP2 ON USR2.EMP_ID = EMP2.EMP_ID											
			LEFT	OUTER JOIN TP_USR_MASTER USR3 ON ACT.CHG_ID = USR3.USER_ID											
			LEFT	OUTER JOIN TP_EMPLOYEE EMP3 ON USR3.EMP_ID = EMP3.EMP_ID	
			WHERE 1=1
			${#refDocNo?.text} 	
			ORDER BY ACT.REG_DT DESC
		]]>
		</query>
		<parameter name="refDocNo">AND ACT.REF_DOC_NO = :refDocNo</parameter>
		<parameter name='langCd' required="false" />
	</sql-service>
	
	<sql-service name="SR.SQL_INSERT_ACTIVITY_UNDER_SERVICE_REQUEST" type="named-parameter" showSql="true">
		<query><![CDATA[
		
			INSERT INTO TP_ACTIVITY 
			            (
			             ACT_NUMBER
			            ,ACT_GROUP
			            ,REF_DOC_NO
			            ,ATTEND_TO
			            ,TITLE
			            ,TYPE_CD
			            ,DESCRIPTION
			            ,PHONE_NO
			            ,SMS_NO
			            ,FAX_NO
			            ,EMAIL
			            ,ADDRESS
			            ,STATUS_CD
			            ,OWNER_ID
			            ,OWNER_DEPT_CODE
			            ,OPENED_DT
			            ,DUE_DT
			            ,OPER_DT
			            ,CLOSED_DT
			            ,REG_ID
			            ,REG_DT
			            )
			        VALUES 
			           (
			              :actNumber
			            , 'SR'
			            , :refDocNo
			            , :attendTo
			            , :title
			            , :typeCd
			            , :description
			            , :phoneNo
			            , :smsNo
			            , :faxNo
			            , :email
			            , :address
			            , :statusCd
			            , :ownerId
			            , :ownerDeptCode
			            , :openedDt
			            , :dueDt
			            , :operDt
			            , :closedDt
			            , :regId
			            , :regDt
			            )
			 
				        
		]]>
		</query>
		<parameter name="actNumber" required="true" />
		<parameter name="refDocNo" required="true" />
		<parameter name="attendTo" required="false" />
		<parameter name="title" required="false" />
		<parameter name="typeCd" required="false" />
		<parameter name="description" required="false" />
		<parameter name="phoneNo" required="false" />
		<parameter name="smsNo" required="false" />
		<parameter name="faxNo" required="false" />
		<parameter name="email" required="false" />
		<parameter name="address" required="false" />
		<parameter name="statusCd" required="false" />
		<parameter name="ownerId" required="false" />
		<parameter name="ownerDeptCode" required="false" />
		<parameter name="openedDt" required="false" />
		<parameter name="dueDt" required="false" />
		<parameter name="operDt" required="false" />
		<parameter name="closedDt" required="false" />
		<parameter name="regId" required="false" />
		<parameter name="regDt" required="false" />

	</sql-service>
	
	<sql-service name="SR.SQL_UPDATE_ACTIVITY_UNDER_SERVICE_REQUEST" type="named-parameter" showSql="true">
		<query><![CDATA[
		
			UPDATE  TP_ACTIVITY 
			SET		
			  ATTEND_TO	= :attendTo
			 ,TITLE		= :title
			 ,TYPE_CD	=  :typeCd
			 ,DESCRIPTION	= :description
			 ,PHONE_NO	= :phoneNo
			 ,SMS_NO	= :smsNo
			 ,FAX_NO	= :faxNo
			 ,EMAIL		= :email
			 ,ADDRESS	= :address
			 ,STATUS_CD	= :statusCd
			 ,OWNER_ID	= :ownerId
			 ,OWNER_DEPT_CODE	= :ownerDeptCode
			 ,DUE_DT	= :dueDt
			 ,OPER_DT	= :operDt
			 ,CLOSED_DT = :closedDt
			 ,CHG_ID	= :chgId
			 ,CHG_DT	= :chgDt
			 
			 WHERE ACT_NUMBER =  :actNumber

			 
				        
		]]>
		</query>
		<parameter name="actNumber" required="true" />
		<parameter name="attendTo" required="false" />
		<parameter name="title" required="false" />
		<parameter name="typeCd" required="false" />
		<parameter name="description" required="false" />
		<parameter name="phoneNo" required="false" />
		<parameter name="smsNo" required="false" />
		<parameter name="faxNo" required="false" />
		<parameter name="email" required="false" />
		<parameter name="address" required="false" />
		<parameter name="statusCd" required="false" />
		<parameter name="ownerId" required="false" />
		<parameter name="ownerDeptCode" required="false" />
		<parameter name="dueDt" required="false" />
		<parameter name="operDt" required="false" />
		<parameter name="closedDt" required="false" />
		<parameter name="chgId" required="false" />
		<parameter name="chgDt" required="false" />

	</sql-service>
	
	<sql-service name="SR.SQL_DELETE_ACTIVITY_UNDER_SERVICE_REQUEST" type="named-parameter" showSql="true">
		<query><![CDATA[
				DELETE FROM TP_ACTIVITY 
				WHERE ACT_NUMBER = :actNumber 
		        AND REF_DOC_NO =  :refDocNo
	
	]]>
		</query>
		<parameter name="actNumber" required="true" />
		<parameter name="refDocNo" required="true" />

	</sql-service>
	
	<sql-service name="SR.SQL_SEARCH_ACTIVITY_DETAIL_BY_ACT_NUMBER" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>
		<query><![CDATA[	
		
			SELECT			
				ACT.ACT_NUMBER	AS	actNumber	
				,ACT.REF_DOC_NO	AS	refDocNo	
				,ACT.ATTEND_TO	AS	attendTo	
				,ACT.TITLE	AS	title	
				,ACT.TYPE_CD	AS	typeCd	
				,ACT.SUB_TYPE_CD	AS	subTypeCd	
				,ACT.DESCRIPTION	AS	description	
				,ACT.PHONE_NO	AS	phoneNo	
				,ACT.SMS_NO	AS	smsNo	
				,ACT.FAX_NO	AS	faxNo	
				,ACT.EMAIL	AS	email	
				,ACT.ADDRESS	AS	address	
				,ACT.STATUS_CD	AS	statusCd	
				,ACT.OWNER_ID	AS	ownerId	
				,ACT.OWNER_DEPT_CODE	AS	ownerDeptCode	
				,ACT.OPENED_DT	AS	openedDt	
				,ACT.DUE_DT	AS	dueDt	
				,ACT.OPER_DT	AS	operDt	
				,ACT.CLOSED_DT	AS	closedDt	
				,ACT.REG_ID	AS	regId	
				,ACT.REG_DT	AS	regDt	
				,ACT.CHG_ID	AS	chgId	
				,ACT.CHG_DT	AS	chgDt	
				,CB1.CODE_NAME		AS	activityTypeName 	
				,CB2.CODE_NAME 		AS	activityStatusName	
				,ISNULL(EMP1.FIRST_NAME,'')+' '+ISNULL(EMP1.LAST_NAME,'')	AS	ownerName	
				,DEP.DEPT_NAME		AS	deptName	
				,ISNULL(EMP2.FIRST_NAME, '')+' '+ISNULL(EMP2.LAST_NAME,'') AS	regName	
				,ISNULL(EMP3.FIRST_NAME, '')+' '+ISNULL(EMP3.LAST_NAME,'') 	AS	chgName	
				,CONVERT(VARCHAR, ACT.REG_DT, 103) + '  ' + CONVERT(VARCHAR, ACT.REG_DT, 108) AS	regDatetime	
				,CONVERT(VARCHAR, ACT.CHG_DT, 103) + '  ' + CONVERT(VARCHAR, ACT.CHG_DT, 108) AS	chgDatetime	
			FROM	TP_ACTIVITY ACT											
			LEFT	OUTER JOIN TP_CODEBOOK_LANG CB1 ON ACT.TYPE_CD = CB1.CODE_ID AND CB1.CODE_TYPE = 'ACT_TYPE'		AND CB1.LANG_CD = :langCd										
			LEFT	OUTER JOIN TP_CODEBOOK_LANG CB2 ON ACT.STATUS_CD = CB2.CODE_ID AND CB2.CODE_TYPE = 'ACT_STATUS'	AND CB2.LANG_CD = :langCd																						
			LEFT	OUTER JOIN TP_USR_MASTER USR1 ON ACT.OWNER_ID = USR1.USER_ID											
			LEFT	OUTER JOIN TP_EMPLOYEE EMP1 ON USR1.EMP_ID = EMP1.EMP_ID											
			LEFT	OUTER JOIN TP_DEPARTMENT DEP ON ACT.OWNER_DEPT_CODE = DEP.DEPT_CODE											
			LEFT	OUTER JOIN TP_USR_MASTER USR2 ON ACT.REG_ID = USR2.USER_ID											
			LEFT	OUTER JOIN TP_EMPLOYEE EMP2 ON USR2.EMP_ID = EMP2.EMP_ID											
			LEFT	OUTER JOIN TP_USR_MASTER USR3 ON ACT.CHG_ID = USR3.USER_ID											
			LEFT	OUTER JOIN TP_EMPLOYEE EMP3 ON USR3.EMP_ID = EMP3.EMP_ID	
			WHERE 1=1
			${#actNumber?.text} 	
		]]>
		</query>
		<parameter name="actNumber">AND ACT.ACT_NUMBER = :actNumber</parameter>
		<parameter name='langCd' required="false" />
	</sql-service>
	
	<sql-service name="SR.SQL_SEARCH_SR_LIST_BY_CONSULTING_NUMBER" type="named-parameter" showSql="true">
		<description>For Display Service Request Search List By Consulting Number at module Consulting</description>
		<query><![CDATA[	
			
				SELECT	
					 SR.SR_NUMBER AS  srNumber
					,CAT1.CAT_NAME  AS  srTypeProblem1
	        		,CAT2.CAT_NAME  AS  srTypeProblem2
	        		,CAT3.CAT_NAME  AS  srTypeProblem3
	        		,CAT4.CAT_NAME  AS  srTypeProblem4
	        		,CAT5.CAT_NAME  AS  srTypeProblem5
	        		,SR.TITLE  AS srSubject
					,CB3.CODE_NAME  AS  srStatusDesc
					,CB4.CODE_NAME  AS  srPriorityDesc
					,SR.OPENED_DT  AS  srOpenedDate
					,SR.DUE_DT  AS  srDueDate
					,SR.CLOSED_DT  AS  srCloseDate
					, ISNULL(EMP1.FIRST_NAME, '')+' '+ISNULL(EMP1.LAST_NAME,'') AS  srOwnerName
					
					,SR.SR_TYPE_PROBLEM1 AS  srTypeProblem1Cd
					,SR.SR_TYPE_PROBLEM2 AS  srTypeProblem2Cd
					,SR.SR_TYPE_PROBLEM3 AS  srTypeProblem3Cd
					,SR.SR_TYPE_PROBLEM4 AS  srTypeProblem4Cd
					,SR.SR_TYPE_PROBLEM5 AS  srTypeProblem5Cd
					,SR.PRIORITY_CD AS  srpriorityCd
					,SR.STATUS_CD  AS  srStatusCd
					,SR.OWNER_ID  AS  srOwnerId				
					,SR.CUST_ID  AS  srCustId
					,SR.CHANNEL_CD  AS  srChannelCd
					,CB5.CODE_NAME  AS  srChannelName
					,CASE SR.CUST_TYPE_CD 										
						WHEN 'I' THEN ISNULL(CUST_IND.FIRST_NAME, '')+' '+ISNULL(CUST_IND.LAST_NAME,'') 									
						ELSE CUST_CORP.COMPANY_NAME									
					  END AS  customerName
					
					,SR.REG_ID  AS  regId
					,SR.REG_DT  AS  regDt
					,ISNULL(EMP2.FIRST_NAME, '')+' '+ISNULL(EMP2.LAST_NAME,'') AS regName										
					,ISNULL(EMP3.FIRST_NAME, '')+' '+ISNULL(EMP3.LAST_NAME,'') AS chgName		
					  
				FROM TP_SR SR 										
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT1 CAT1 ON SR.SR_TYPE_PROBLEM1 = CAT1.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT2 CAT2 ON SR.SR_TYPE_PROBLEM2 = CAT2.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT3 CAT3 ON SR.SR_TYPE_PROBLEM3 = CAT3.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT4 CAT4 ON SR.SR_TYPE_PROBLEM4 = CAT4.CONTENT_CAT_ID
				LEFT  OUTER JOIN  TP_KB_CONTENT_CAT5 CAT5 ON SR.SR_TYPE_PROBLEM5 = CAT5.CONTENT_CAT_ID
													
				LEFT  OUTER JOIN TP_CODEBOOK_LANG CB3 ON SR.STATUS_CD = CB3.CODE_ID AND CB3.CODE_TYPE = 'SRQ_STATUS'	AND CB3.LANG_CD = :langCd									
				LEFT  OUTER JOIN TP_CODEBOOK_LANG CB4 ON SR.PRIORITY_CD = CB4.CODE_ID AND CB4.CODE_TYPE = 'SRQ_PRIORITY'	AND CB4.LANG_CD = :langCd									
				LEFT  OUTER JOIN TP_CODEBOOK_LANG CB5 ON SR.PRIORITY_CD = CB5.CODE_ID AND CB5.CODE_TYPE = 'SRQ_CHANNEL'	AND CB5.LANG_CD = :langCd
				
				LEFT  OUTER JOIN TP_USR_MASTER USR1 ON SR.OWNER_ID = USR1.USER_ID										
				LEFT  OUTER JOIN TP_EMPLOYEE EMP1 ON USR1.EMP_ID = EMP1.EMP_ID										
				LEFT  OUTER JOIN TP_USR_MASTER USR2 ON SR.REG_ID = USR2.USER_ID										
				LEFT  OUTER JOIN TP_EMPLOYEE EMP2 ON USR2.EMP_ID = EMP2.EMP_ID										
				LEFT  OUTER JOIN TP_USR_MASTER USR3 ON SR.CHG_ID = USR3.USER_ID										
				LEFT  OUTER JOIN TP_EMPLOYEE EMP3 ON USR3.EMP_ID = EMP3.EMP_ID										
				LEFT  OUTER JOIN TP_CUST_MASTER CUST ON SR.CUST_ID = CUST.CUST_ID  										
				LEFT  OUTER JOIN TP_INDIVIDUAL CUST_IND ON CUST.IND_ID = CUST_IND.IND_ID 										
				LEFT  OUTER JOIN TP_CORPORATION CUST_CORP ON CUST.CORP_ID = CUST_CORP.CORP_ID										
				LEFT OUTER JOIN TP_DEPARTMENT DP ON USR1.DEPT_CODE = DP.DEPT_CODE	
												
				WHERE	1=1										
				AND	SR.SR_GROUP =  'SR'	
				${#consultingNumber?.text}
 
				ORDER BY SR.REG_DT DESC
		]]>
		</query>
		<parameter name="consultingNumber">AND SR.CONSULTING_NUMBER = :consultingNumber</parameter>
		<parameter name='langCd' required="false" />
	</sql-service>
	
	<sql-service name="SR.SQL_COUNT_TP_ACTIVITY_UNDER_REFDOCNO" type="named-parameter" showSql="true">
	<description>for check activity status under refDocNo </description>		
	<query><![CDATA[
	
			SELECT COUNT(ACT.ACT_NUMBER) 
			FROM TP_ACTIVITY ACT 
 			WHERE ACT.STATUS_CD NOT IN ('03','04') AND ACT.REF_DOC_NO = ${#refDocNo?.text}
				        
		]]>
		</query>
		<parameter name="refDocNo"  required="true">:refDocNo</parameter>
	</sql-service>
	
</query-collection>