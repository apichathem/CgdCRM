<?xml version="1.0" encoding="UTF-8"?>
<query-collection>
	<sql-service name="ROLE.INSERT_ROLE" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			INSERT INTO tp_role (
			   ROLE_NAME
			  ,ROLE_ENABLED
			  ,PARENT_ROLE_ID
			  ,REG_ID
			  ,REG_DT
			  ,CHG_ID
			  ,CHG_DT
			) VALUES (
			   :roleName
			  ,'Y'
			  ,:parentRoleId
			  ,:createBy
			  , GETDATE()
			  ,:createBy
			  , GETDATE()
			)
		]]>
		</query>
		<parameter name="roleName" required="true" />
		<parameter name="parentRoleId" required="true" />
		<parameter name="createBy" required="true" />
	</sql-service>
	
	<sql-service name="ROLE.UPDATE_ROLE" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			UPDATE tp_role 
			  SET 
			      ROLE_NAME=:roleName
			    , PARENT_ROLE_ID=:parentRoleId
			    , CHG_ID=:updateBy
			    , CHG_DT=GETDATE()
			  WHERE ROLE_ID=:roleId
		]]>
		</query>
		<parameter name="roleName" required="true" />
		<parameter name="roleId" required="true" />
		<parameter name="parentRoleId" required="true" />
		<parameter name="updateBy" required="true" />
	</sql-service>
	
	<sql-service name="ROLE.FIND_BY_ID" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			SELECT r1.ROLE_ID, 
				r1.ROLE_NAME, 
				r2.ROLE_ID AS PARENT_ROLE_ID, 
				r2.ROLE_NAME AS PARENT_ROLE_NAME
			FROM tp_role r1
			LEFT OUTER JOIN TP_ROLE r2 ON r1.PARENT_ROLE_ID = r2.ROLE_ID
			WHERE r1.ROLE_ID=:roleId
		]]>
		</query>
		<parameter name="roleId" required="true" />
	</sql-service>
	
	<sql-service name="ROLE.FIND_BY_NAME" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			SELECT r1.ROLE_ID, 
				r1.ROLE_NAME,
        		r2.ROLE_ID AS PARENT_ROLE_ID,
        		CASE WHEN r1.PARENT_ROLE_ID IS NOT NULL THEN r2.ROLE_NAME ELSE '-' END AS PARENT_ROLE_NAME
			FROM tp_role r1
			LEFT OUTER JOIN TP_ROLE r2 ON r1.PARENT_ROLE_ID = r2.ROLE_ID
			WHERE r1.ROLE_NAME like :roleName
		]]>
		</query>
		<parameter name="roleName" required="true" prefix="%" suffix="%" />
	</sql-service>
	
	<sql-service name="ROLE.DELETE_ROLEMENU" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			DELETE FROM tp_role_menu_action WHERE ROLE_ID = :roleId
		]]>
		</query>
		<parameter name="roleId" required="true" />
	</sql-service>
	
	<sql-service name="ROLE.INSERT_ROLEMENU" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			INSERT INTO tp_role_menu_action (
			   ROLE_ID
			  ,MENU_ID
			  ,ACTION_CD
			  ,ACTION_VALUE
			) VALUES (
			   :roleId
			  ,:menuId
			  ,:actionCd
			  ,:actionValue
			)
		]]>
		</query>
		<parameter name="roleId" required="true" />
		<parameter name="menuId" required="true" />
		<parameter name="actionCd" required="true" />
		<parameter name="actionValue" required="true" />
	</sql-service>
	
	<sql-service name="ROLE.FIND_ROLEMENU" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			SELECT MENU_ID FROM tp_role_menu_action WHERE ROLE_ID=:roleId
			GROUP BY MENU_ID
		]]>
		</query>
		<parameter name="roleId" required="true" />
	</sql-service>
	
	<sql-service name="ROLE.FIND_BY_ENABLED" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			SELECT ROLE_ID, ROLE_NAME FROM tp_role WHERE ROLE_ENABLED = 'Y'
		]]>
		</query>
	</sql-service>
	
	<sql-service name="ROLE.FIND_ROLE_PRIVILEGE" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			SELECT menu.MENU_ID, menu.CAPTION, action.ACTION_NAME, action.ACTION_CD, roleAction.ACTION_VALUE AS ROLE_ACTION_CD, actType.CODE_NAME AS ROLE_ACTION_VALUE
			FROM TP_ROLE_MENU_ACTION roleAction
			INNER JOIN TP_MENU menu ON menu.MENU_ID = roleAction.MENU_ID
			INNER JOIN SYS_ACTION action ON action.ACTION_CD = roleAction.ACTION_CD AND action.ENABLED = 'Y'
			INNER JOIN TP_CODEBOOK_LANG actType ON actType.CODE_TYPE = 'ROLE_ACTION' AND actType.CODE_ID = roleAction.ACTION_VALUE AND actType.LANG_CD = 'EN'
			WHERE ROLE_ID = :roleId
			AND menu.SYSTEM_YN <> 'Y'
			AND menu.ACTION <> '#'
		]]>
		</query>
		<parameter name="roleId" required="true" />
	</sql-service>
	
	<sql-service name="ROLE.COUNT_ROLE_PRIVILEGE" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			SELECT COUNT(1) FROM TP_ROLE_MENU_ACTION
			WHERE ACTION_CD = :actionCd
			AND MENU_ID = :menuId
			AND ROLE_ID = :roleId
		]]>
		</query>
		<parameter name="roleId" required="true" />
		<parameter name="menuId" required="true" />
		<parameter name="actionCd" required="true" />
	</sql-service>
	
	<sql-service name="ROLE.INSERT_ROLE_PRIVILEGE" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			INSERT INTO TP_ROLE_MENU_ACTION
			(MENU_ID, ROLE_ID, ACTION_CD, ACTION_VALUE, REG_ID, REG_DT, CHG_ID, CHG_DT) 
			VALUES (:menuId, :roleId, :actionCd, :actionValue, :createBy, GETDATE(), :createBy, GETDATE())

		]]>
		</query>
		<parameter name="roleId" required="true" />
		<parameter name="menuId" required="true" />
		<parameter name="actionCd" required="true" />
		<parameter name="actionValue" required="true" />
		<parameter name="createBy" required="true" />
	</sql-service>
	
	<sql-service name="ROLE.UPDATE_ROLE_PRIVILEGE" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			UPDATE CGD_CRM_DB.dbo.TP_ROLE_MENU_ACTION 
			SET ACTION_VALUE = :actionValue, 
			CHG_ID = :updateBy, 
			CHG_DT = GETDATE()
			WHERE  ACTION_CD = :actionCd
			AND MENU_ID = :menuId
			AND ROLE_ID = :roleId
		]]>
		</query>
		<parameter name="roleId" required="true" />
		<parameter name="menuId" required="true" />
		<parameter name="actionCd" required="true" />
		<parameter name="actionValue" required="true" />
		<parameter name="updateBy" required="true" />
	</sql-service>
	
	<sql-service name="ROLE.FIND_ROLE_ACTION_MASTER" type="named-parameter" showSql="true">
		<description>For Display Service Request Detail</description>		
		<query><![CDATA[	
			SELECT * from SYS_ACTION
			WHERE ENABLED = 'Y'
		]]>
		</query>
	</sql-service>
	
</query-collection>